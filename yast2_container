#! /bin/bash

# Download YaST image and start it in a container to manage the host system.

set -e

echo "** WARNING: This is an experimental tool, do not use in production systems!!"
echo "** There is a hight risk of breaking the system or data loss!"
echo

# use podman, if not available try docker
if command -v podman &> /dev/null; then
    TOOL="podman"
elif command -v docker &> /dev/null; then
    TOOL="docker"
else
    echo "ERROR: Container runtime not installed, install 'podman' or 'docker' package" >&2
    exit 1
fi

. /etc/os-release
if [ "$ID" == "sles" -a "$VERSION_ID" == "15.4" ]; then
  GUI_IMAGE="registry.suse.de/devel/yast/head/container/containers/yast-mgmt-qt"
  TUI_IMAGE="registry.suse.de/devel/yast/head/container/containers/yast-mgmt-ncurses"
elif [ "$ID" == "opensuse-leap" -a "$VERSION_ID" == "15.4" ]; then
  GUI_IMAGE="registry.opensuse.org/yast/head/containers_leap_latest/yast-mgmt-qt-leap_latest"
  TUI_IMAGE="registry.opensuse.org/yast/head/containers_leap_latest/yast-mgmt-ncurses-leap_latest"
else
    echo "ERROR: Unsupported system: $PRETTY_NAME" >&2
    exit 1
fi

if [ "`basename $0`" == "yast_container" -o -z "$DISPLAY" ]; then
    EXTRA_OPTIONS=""
    IMAGE_NAME="$TUI_IMAGE"
else
    # start the container with extra "-e" and "-v" options to allow accessing
    # the local X server from inside the Docker container
    EXTRA_OPTIONS="-e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix:ro -v $XAUTHORITY:$XAUTHORITY:ro -e XAUTHORITY"
    IMAGE_NAME="$GUI_IMAGE"
fi

# make sure the container image is up to date
$TOOL pull $IMAGE_NAME

# the default command to run
: "${CMD=/sbin/yast2}"
# where is the host system root mounted in the container
CHROOT_DIR="/mnt"

set -x
# start the container
$TOOL run -it --privileged --pid=host --ipc=host --net=host \
    -v /dev/disk:/dev/disk -v /:$CHROOT_DIR $EXTRA_OPTIONS -v /var/cache/zypp:/var/cache/zypp \
    -e ZYPP_LOCKFILE_ROOT=$CHROOT_DIR -e YAST_SCR_TARGET=$CHROOT_DIR \
    --rm "$IMAGE_NAME" "$CMD" "$@"
